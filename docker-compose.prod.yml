version: '3.8'

services:
  # Frontend - React Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: research-paper-frontend
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - research-paper-network

  # Backend - Node.js API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: research-paper-backend
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - AI_SERVICE_URL=http://ai-service:5000
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    depends_on:
      - ai-service
    restart: unless-stopped
    networks:
      - research-paper-network

  # AI Service - Python FastAPI
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
      target: production
    container_name: research-paper-ai
    ports:
      - "5000:5000"
    environment:
      - ENVIRONMENT=production
      - PORT=5000
    volumes:
      - ./ai-service/models:/app/models
      - ./ai-service/logs:/app/logs
    restart: unless-stopped
    networks:
      - research-paper-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: research-paper-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - research-paper-network

networks:
  research-paper-network:
    driver: bridge

volumes:
  uploads:
  logs:
  ssl: