# Streamlit-specific Docker Compose for development and testing
version: '3.8'

services:
  # Backend services (required for Streamlit to function)
  ai-service:
    build:
      context: ../ai-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - MAX_BATCH_SIZE=32
      - DEBUG=false
    volumes:
      - ai_models:/root/.cache/torch/sentence_transformers
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - HOST=0.0.0.0
      - AI_SERVICE_URL=http://ai-service:5000
      - DATABASE_URL=/app/data/research_assistant.sqlite
      - CORS_ORIGIN=http://localhost:8501,http://streamlit-app:8501
    volumes:
      - ../server/data:/app/data
      - ../server/uploads:/app/uploads
      - ../server/logs:/app/logs
    depends_on:
      ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Streamlit App (Main service)
  streamlit-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://server:8000
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - DEBUG=true
    volumes:
      # For development - mount source code
      - .:/app
      - /app/.streamlit  # Don't mount .streamlit to preserve container config
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    command: ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.runOnSave=true"]

volumes:
  ai_models:
    driver: local

networks:
  default:
    name: streamlit-research-network